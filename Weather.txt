<!DOCTYPE html>
<html lang="en">
<head>body {
    font-family: Arial, sans-serif;
    background: linear-gradient(to right, #6a11cb, #2575fc);
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    text-align: center;
    background-color: rgba(255, 255, 255, 0.1);
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}

input[type="text"] {
    padding: 10px;
    width: 200px;
    border: none;
    border-radius: 5px;
    margin-bottom: 10px;
}

button {
    padding: 10px 20px;
    margin: 5px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background-color: #4CAF50;
    color: #fff;
}

button:hover {
    background-color: #45a049;
}

.weather-result {
    margin-top: 20px;
    font-size: 1.2em;
}

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <input type="text" id="locationInput" placeholder="Enter a location">
        <button onclick="getWeatherByLocation()">Get Weather</button>
        <button onclick="getWeatherByUserLocation()">Get Weather by Current Location</button>

        <div id="weatherResult" class="weather-result">
            <!-- Weather information will be displayed here -->
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>
const apiKey = 'YOUR_API_KEY';

function getWeatherByLocation() {
    const location = document.getElementById('locationInput').value;
    if (location) {
        fetchWeatherData(location);
    } else {
        alert("Please enter a location.");
    }
}

function getWeatherByUserLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(position => {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            fetchWeatherDataByCoords(lat, lon);
        }, error => {
            alert("Unable to retrieve your location. Please enter it manually.");
        });
    } else {
        alert("Geolocation is not supported by this browser.");
    }
}

function fetchWeatherData(location) {
    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${apiKey}`)
        .then(response => response.json())
        .then(data => displayWeatherData(data))
        .catch(error => console.error("Error fetching weather data:", error));
}

function fetchWeatherDataByCoords(lat, lon) {
    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`)
        .then(response => response.json())
        .then(data => displayWeatherData(data))
        .catch(error => console.error("Error fetching weather data:", error));
}

function displayWeatherData(data) {
    if (data.cod === 200) {
        const weatherResult = document.getElementById('weatherResult');
        weatherResult.innerHTML = `
            <h2>${data.name}, ${data.sys.country}</h2>
            <p><strong>Temperature:</strong> ${data.main.temp} Â°C</p>
            <p><strong>Weather:</strong> ${data.weather[0].description}</p>
            <p><strong>Humidity:</strong> ${data.main.humidity}%</p>
            <p><strong>Wind Speed:</strong> ${data.wind.speed} m/s</p>
        `;
    } else {
        alert("Location not found. Please try again.");
    }
}

